/*
 * This file is generated by jOOQ.
*/
package twitch.explorer.database.jooq.db;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import twitch.explorer.database.jooq.db.tables.BroadcasterType;
import twitch.explorer.database.jooq.db.tables.Client;
import twitch.explorer.database.jooq.db.tables.Community;
import twitch.explorer.database.jooq.db.tables.Followers;
import twitch.explorer.database.jooq.db.tables.Game;
import twitch.explorer.database.jooq.db.tables.Language;
import twitch.explorer.database.jooq.db.tables.Stream;
import twitch.explorer.database.jooq.db.tables.StreamCommunity;
import twitch.explorer.database.jooq.db.tables.StreamType;
import twitch.explorer.database.jooq.db.tables.User;
import twitch.explorer.database.jooq.db.tables.UserType;
import twitch.explorer.database.jooq.db.tables.Vote;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Twitch extends SchemaImpl {

    private static final long serialVersionUID = 856160126;

    /**
     * The reference instance of <code>twitch</code>
     */
    public static final Twitch TWITCH = new Twitch();

    /**
     * more info at: https://dev.twitch.tv/docs/api/reference#get-users
Userâ€™s broadcaster type: "partner", "affiliate", or "".
     */
    public final BroadcasterType BROADCASTER_TYPE = twitch.explorer.database.jooq.db.tables.BroadcasterType.BROADCASTER_TYPE;

    /**
     * The table <code>twitch.client</code>.
     */
    public final Client CLIENT = twitch.explorer.database.jooq.db.tables.Client.CLIENT;

    /**
     * The table <code>twitch.community</code>.
     */
    public final Community COMMUNITY = twitch.explorer.database.jooq.db.tables.Community.COMMUNITY;

    /**
     * The table <code>twitch.followers</code>.
     */
    public final Followers FOLLOWERS = twitch.explorer.database.jooq.db.tables.Followers.FOLLOWERS;

    /**
     * The table <code>twitch.game</code>.
     */
    public final Game GAME = twitch.explorer.database.jooq.db.tables.Game.GAME;

    /**
     * The table <code>twitch.language</code>.
     */
    public final Language LANGUAGE = twitch.explorer.database.jooq.db.tables.Language.LANGUAGE;

    /**
     * The table <code>twitch.stream</code>.
     */
    public final Stream STREAM = twitch.explorer.database.jooq.db.tables.Stream.STREAM;

    /**
     * The table <code>twitch.stream_community</code>.
     */
    public final StreamCommunity STREAM_COMMUNITY = twitch.explorer.database.jooq.db.tables.StreamCommunity.STREAM_COMMUNITY;

    /**
     * The table <code>twitch.stream_type</code>.
     */
    public final StreamType STREAM_TYPE = twitch.explorer.database.jooq.db.tables.StreamType.STREAM_TYPE;

    /**
     * The table <code>twitch.user</code>.
     */
    public final User USER = twitch.explorer.database.jooq.db.tables.User.USER;

    /**
     * The table <code>twitch.user_type</code>.
     */
    public final UserType USER_TYPE = twitch.explorer.database.jooq.db.tables.UserType.USER_TYPE;

    /**
     * The table <code>twitch.vote</code>.
     */
    public final Vote VOTE = twitch.explorer.database.jooq.db.tables.Vote.VOTE;

    /**
     * No further instances allowed
     */
    private Twitch() {
        super("twitch", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            BroadcasterType.BROADCASTER_TYPE,
            Client.CLIENT,
            Community.COMMUNITY,
            Followers.FOLLOWERS,
            Game.GAME,
            Language.LANGUAGE,
            Stream.STREAM,
            StreamCommunity.STREAM_COMMUNITY,
            StreamType.STREAM_TYPE,
            User.USER,
            UserType.USER_TYPE,
            Vote.VOTE);
    }
}
