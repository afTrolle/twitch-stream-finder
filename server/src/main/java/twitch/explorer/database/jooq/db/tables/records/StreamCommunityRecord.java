/*
 * This file is generated by jOOQ.
*/
package twitch.explorer.database.jooq.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import twitch.explorer.database.jooq.db.tables.StreamCommunity;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StreamCommunityRecord extends TableRecordImpl<StreamCommunityRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 776813123;

    /**
     * Setter for <code>twitch.stream_community.stream_id</code>.
     */
    public void setStreamId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitch.stream_community.stream_id</code>.
     */
    public Integer getStreamId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>twitch.stream_community.community_id</code>.
     */
    public void setCommunityId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitch.stream_community.community_id</code>.
     */
    public Integer getCommunityId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StreamCommunity.STREAM_COMMUNITY.STREAM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return StreamCommunity.STREAM_COMMUNITY.COMMUNITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getStreamId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getCommunityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getStreamId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCommunityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreamCommunityRecord value1(Integer value) {
        setStreamId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreamCommunityRecord value2(Integer value) {
        setCommunityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreamCommunityRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StreamCommunityRecord
     */
    public StreamCommunityRecord() {
        super(StreamCommunity.STREAM_COMMUNITY);
    }

    /**
     * Create a detached, initialised StreamCommunityRecord
     */
    public StreamCommunityRecord(Integer streamId, Integer communityId) {
        super(StreamCommunity.STREAM_COMMUNITY);

        set(0, streamId);
        set(1, communityId);
    }
}
