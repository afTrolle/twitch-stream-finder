/*
 * This file is generated by jOOQ.
*/
package twitch.explorer.database.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import twitch.explorer.database.jooq.db.Indexes;
import twitch.explorer.database.jooq.db.Keys;
import twitch.explorer.database.jooq.db.Twitch;
import twitch.explorer.database.jooq.db.tables.records.BroadcasterTypeRecord;


/**
 * more info at: https://dev.twitch.tv/docs/api/reference#get-users
 * User’s broadcaster type: "partner", "affiliate", or "".
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BroadcasterType extends TableImpl<BroadcasterTypeRecord> {

    private static final long serialVersionUID = -874576839;

    /**
     * The reference instance of <code>twitch.broadcaster_type</code>
     */
    public static final BroadcasterType BROADCASTER_TYPE = new BroadcasterType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BroadcasterTypeRecord> getRecordType() {
        return BroadcasterTypeRecord.class;
    }

    /**
     * The column <code>twitch.broadcaster_type.broadcaster_type_id</code>.
     */
    public final TableField<BroadcasterTypeRecord, Integer> BROADCASTER_TYPE_ID = createField("broadcaster_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>twitch.broadcaster_type.type</code>.
     */
    public final TableField<BroadcasterTypeRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * Create a <code>twitch.broadcaster_type</code> table reference
     */
    public BroadcasterType() {
        this(DSL.name("broadcaster_type"), null);
    }

    /**
     * Create an aliased <code>twitch.broadcaster_type</code> table reference
     */
    public BroadcasterType(String alias) {
        this(DSL.name(alias), BROADCASTER_TYPE);
    }

    /**
     * Create an aliased <code>twitch.broadcaster_type</code> table reference
     */
    public BroadcasterType(Name alias) {
        this(alias, BROADCASTER_TYPE);
    }

    private BroadcasterType(Name alias, Table<BroadcasterTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private BroadcasterType(Name alias, Table<BroadcasterTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "more info at: https://dev.twitch.tv/docs/api/reference#get-users\nUser’s broadcaster type: \"partner\", \"affiliate\", or \"\".");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Twitch.TWITCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BROADCASTER_TYPE_ID_UNIQUE, Indexes.BROADCASTER_TYPE_PRIMARY, Indexes.BROADCASTER_TYPE_TYPE_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BroadcasterTypeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BROADCASTER_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BroadcasterTypeRecord> getPrimaryKey() {
        return Keys.KEY_BROADCASTER_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BroadcasterTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<BroadcasterTypeRecord>>asList(Keys.KEY_BROADCASTER_TYPE_PRIMARY, Keys.KEY_BROADCASTER_TYPE_ID_UNIQUE, Keys.KEY_BROADCASTER_TYPE_TYPE_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BroadcasterType as(String alias) {
        return new BroadcasterType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BroadcasterType as(Name alias) {
        return new BroadcasterType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BroadcasterType rename(String name) {
        return new BroadcasterType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BroadcasterType rename(Name name) {
        return new BroadcasterType(name, null);
    }
}
