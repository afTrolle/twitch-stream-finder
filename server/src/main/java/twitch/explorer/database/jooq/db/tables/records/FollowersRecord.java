/*
 * This file is generated by jOOQ.
*/
package twitch.explorer.database.jooq.db.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;

import twitch.explorer.database.jooq.db.tables.Followers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FollowersRecord extends TableRecordImpl<FollowersRecord> implements Record3<Integer, Timestamp, Long> {

    private static final long serialVersionUID = 1501838237;

    /**
     * Setter for <code>twitch.followers.followers</code>.
     */
    public void setFollowers(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitch.followers.followers</code>.
     */
    public Integer getFollowers() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>twitch.followers.fetched</code>.
     */
    public void setFetched(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitch.followers.fetched</code>.
     */
    public Timestamp getFetched() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>twitch.followers.user_id</code>.
     */
    public void setUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>twitch.followers.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Timestamp, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Timestamp, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Followers.FOLLOWERS.FOLLOWERS_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Followers.FOLLOWERS.FETCHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Followers.FOLLOWERS.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getFollowers();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getFetched();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getFollowers();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getFetched();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FollowersRecord value1(Integer value) {
        setFollowers(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FollowersRecord value2(Timestamp value) {
        setFetched(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FollowersRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FollowersRecord values(Integer value1, Timestamp value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FollowersRecord
     */
    public FollowersRecord() {
        super(Followers.FOLLOWERS);
    }

    /**
     * Create a detached, initialised FollowersRecord
     */
    public FollowersRecord(Integer followers, Timestamp fetched, Long userId) {
        super(Followers.FOLLOWERS);

        set(0, followers);
        set(1, fetched);
        set(2, userId);
    }
}
