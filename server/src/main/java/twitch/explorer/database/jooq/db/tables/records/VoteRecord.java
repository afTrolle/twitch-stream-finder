/*
 * This file is generated by jOOQ.
*/
package twitch.explorer.database.jooq.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import twitch.explorer.database.jooq.db.enums.VoteState;
import twitch.explorer.database.jooq.db.tables.Vote;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VoteRecord extends UpdatableRecordImpl<VoteRecord> implements Record4<Long, Long, VoteState, String> {

    private static final long serialVersionUID = -775592811;

    /**
     * Setter for <code>twitch.vote.vote_id</code>.
     */
    public void setVoteId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitch.vote.vote_id</code>.
     */
    public Long getVoteId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>twitch.vote.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitch.vote.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>twitch.vote.state</code>.
     */
    public void setState(VoteState value) {
        set(2, value);
    }

    /**
     * Getter for <code>twitch.vote.state</code>.
     */
    public VoteState getState() {
        return (VoteState) get(2);
    }

    /**
     * Setter for <code>twitch.vote.cookie</code>.
     */
    public void setCookie(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>twitch.vote.cookie</code>.
     */
    public String getCookie() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, VoteState, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, VoteState, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Vote.VOTE.VOTE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Vote.VOTE.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<VoteState> field3() {
        return Vote.VOTE.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Vote.VOTE.COOKIE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getVoteId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteState component3() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCookie();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getVoteId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteState value3() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCookie();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value1(Long value) {
        setVoteId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value3(VoteState value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value4(String value) {
        setCookie(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord values(Long value1, Long value2, VoteState value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VoteRecord
     */
    public VoteRecord() {
        super(Vote.VOTE);
    }

    /**
     * Create a detached, initialised VoteRecord
     */
    public VoteRecord(Long voteId, Long userId, VoteState state, String cookie) {
        super(Vote.VOTE);

        set(0, voteId);
        set(1, userId);
        set(2, state);
        set(3, cookie);
    }
}
