/*
 * This file is generated by jOOQ.
*/
package twitch.explorer.database.jooq.db.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import twitch.explorer.database.jooq.db.tables.Client;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientRecord extends UpdatableRecordImpl<ClientRecord> implements Record4<Integer, String, String, Timestamp> {

    private static final long serialVersionUID = 808378599;

    /**
     * Setter for <code>twitch.client.client_id</code>.
     */
    public void setClientId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitch.client.client_id</code>.
     */
    public Integer getClientId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>twitch.client.ip</code>.
     */
    public void setIp(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitch.client.ip</code>.
     */
    public String getIp() {
        return (String) get(1);
    }

    /**
     * Setter for <code>twitch.client.cookie</code>.
     */
    public void setCookie(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>twitch.client.cookie</code>.
     */
    public String getCookie() {
        return (String) get(2);
    }

    /**
     * Setter for <code>twitch.client.issued</code>.
     */
    public void setIssued(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>twitch.client.issued</code>.
     */
    public Timestamp getIssued() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Client.CLIENT.CLIENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Client.CLIENT.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Client.CLIENT.COOKIE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Client.CLIENT.ISSUED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getClientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCookie();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getIssued();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getClientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCookie();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getIssued();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientRecord value1(Integer value) {
        setClientId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientRecord value2(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientRecord value3(String value) {
        setCookie(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientRecord value4(Timestamp value) {
        setIssued(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientRecord values(Integer value1, String value2, String value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientRecord
     */
    public ClientRecord() {
        super(Client.CLIENT);
    }

    /**
     * Create a detached, initialised ClientRecord
     */
    public ClientRecord(Integer clientId, String ip, String cookie, Timestamp issued) {
        super(Client.CLIENT);

        set(0, clientId);
        set(1, ip);
        set(2, cookie);
        set(3, issued);
    }
}
