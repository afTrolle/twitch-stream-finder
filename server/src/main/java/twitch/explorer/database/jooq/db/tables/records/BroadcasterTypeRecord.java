/*
 * This file is generated by jOOQ.
*/
package twitch.explorer.database.jooq.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import twitch.explorer.database.jooq.db.tables.BroadcasterType;


/**
 * more info at: https://dev.twitch.tv/docs/api/reference#get-users
 * Userâ€™s broadcaster type: "partner", "affiliate", or "".
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BroadcasterTypeRecord extends UpdatableRecordImpl<BroadcasterTypeRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -1406208164;

    /**
     * Setter for <code>twitch.broadcaster_type.broadcaster_type_id</code>.
     */
    public void setBroadcasterTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitch.broadcaster_type.broadcaster_type_id</code>.
     */
    public Integer getBroadcasterTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>twitch.broadcaster_type.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitch.broadcaster_type.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return BroadcasterType.BROADCASTER_TYPE.BROADCASTER_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return BroadcasterType.BROADCASTER_TYPE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getBroadcasterTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getBroadcasterTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BroadcasterTypeRecord value1(Integer value) {
        setBroadcasterTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BroadcasterTypeRecord value2(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BroadcasterTypeRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BroadcasterTypeRecord
     */
    public BroadcasterTypeRecord() {
        super(BroadcasterType.BROADCASTER_TYPE);
    }

    /**
     * Create a detached, initialised BroadcasterTypeRecord
     */
    public BroadcasterTypeRecord(Integer broadcasterTypeId, String type) {
        super(BroadcasterType.BROADCASTER_TYPE);

        set(0, broadcasterTypeId);
        set(1, type);
    }
}
